import { ChatGoogleGenerativeAI } from "@langchain/google-genai"
import type { BenefitInfo } from "./rights-specialist"
import type { ReportData } from "./report-reader"

export class EmpathicGuideAgent {
  private model: ChatGoogleGenerativeAI

  constructor(apiKey: string) {
    this.model = new ChatGoogleGenerativeAI({
      model: "gemini-2.0-flash-exp",
      temperature: 0.8,
      apiKey: apiKey,
    })
  }

  async generateEmpathicExplanation(
    benefit: BenefitInfo,
    reportData: ReportData
  ): Promise<string> {
    const prompt = `Voc√™ √© uma orientadora especializada em ajudar m√£es de crian√ßas autistas no Brasil. Voc√™ √© acolhedora, emp√°tica, encorajadora e usa linguagem simples e carinhosa.

Contexto da fam√≠lia:
- Crian√ßa com autismo (CID ${reportData.cid || "F84"})
- ${reportData.age ? `Idade: ${reportData.age} anos` : "Idade n√£o informada"}
- N√≠vel de suporte: ${reportData.supportLevel || "em avalia√ß√£o"}

Benef√≠cio: ${benefit.name}

Crie uma explica√ß√£o ENCORAJADORA e EMP√ÅTICA (2-3 par√°grafos) que:

1. VALIDA os sentimentos da m√£e ("Voc√™ est√° fazendo o melhor pelo seu filho(a)")
2. EXPLICA em linguagem simples e humana o que √© o benef√≠cio e por que √© importante
3. ENCORAJA sobre a jornada ("Voc√™ n√£o est√° sozinha", "Isso vai ajudar muito")
4. Oferece PERSPECTIVA POSITIVA sobre o processo
5. Usa um TOM CARINHOSO e APOIOVADOR

N√ÉO use:
- Jarg√µes jur√≠dicos complexos
- Termos t√©cnicos sem explica√ß√£o
- Tom formal ou frio
- Frases como "√â necess√°rio", "Deve-se"

USE:
- "Voc√™ pode", "Isso vai ajudar", "Este benef√≠cio significa"
- Linguagem conversacional e acolhedora
- Met√°foras simples quando √∫til
- Emojis discretos (üíô, üôè, ‚ú®) no m√°ximo 2-3

Lembre-se: esta m√£e pode estar cansada, preocupada e sobrecarregada. Sua mensagem deve acolher E fortalecer.

Gere APENAS o texto da explica√ß√£o emp√°tica, sem formata√ß√£o adicional.`

    const response = await this.model.invoke([{ role: "user", content: prompt }])
    return response.content as string
  }

  async generateStepByStepEncouragement(
    stepNumber: number,
    totalSteps: number,
    stepDescription: string
  ): Promise<string> {
    const prompt = `Voc√™ √© uma orientadora acolhedora ajudando uma m√£e a acessar benef√≠cios para seu filho autista.

Ela est√° no passo ${stepNumber} de ${totalSteps}: "${stepDescription}"

Crie uma mensagem curta (2-3 frases) que:
1. RECONHECE o esfor√ßo dela ("√ìtimo, voc√™ est√° indo bem!")
2. D√Å DICAS PR√ÅTICAS sobre este passo espec√≠fico
3. ENCORAJA a continuar ("Voc√™ consegue!", "Est√° quase l√°!")
4. Usa tom acolhedor e positivo

N√ÉO seja gen√©rica. Seja espec√≠fica sobre este passo.

Use emoji discreto (üíô ou ‚ú®) apenas se fizer sentido.

Gere APENAS a mensagem de encorajamento, sem formata√ß√£o.`

    const response = await this.model.invoke([{ role: "user", content: prompt }])
    return response.content as string
  }

  async generateEmotionalSupport(reportData: ReportData): Promise<string> {
    const prompt = `Voc√™ √© uma conselheira emp√°tica especializada em apoiar m√£es de crian√ßas autistas.

Esta m√£e est√° iniciando a jornada de acessar benef√≠cios para seu filho(a) autista.

Crie uma mensagem de APOIO EMOCIONAL e ENCORAJAMENTO (1 par√°grafo) que:

1. VALIDA o que ela est√° sentindo (pode estar cansada, com medo, sobrecarregada)
2. RECONHECE o amor e dedica√ß√£o dela
3. ENCORAJA sobre a jornada pela frente
4. LEMBRA que ela tem direitos e ferramentas dispon√≠veis
5. USA linguagem CALMANTE e POSITIVA

Tom: carinhoso, acolhedor, fortalecido.
N√£o seja superficial - seja genuinamente emp√°tica.

Use no m√°ximo 1 emoji (üíô)

Gere APENAS a mensagem de apoio emocional.`

    const response = await this.model.invoke([{ role: "user", content: prompt }])
    return response.content as string
  }
}
